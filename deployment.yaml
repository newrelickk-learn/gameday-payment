---
apiVersion: v1
kind: Service
metadata:
  name: payment
  namespace: catalogue
spec:
  selector:
    name: payment-api
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: payment-service-secrets
  namespace: catalogue
type: Opaque
stringData:
  NEW_RELIC_LICENSE_KEY: "YOUR_NEW_RELIC_LICENSE_KEY"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-api
  template:
    metadata:
      labels:
        app: payment-api
    spec:
      volumes:
        - name: app-shared
          emptyDir: {}
        - name: logs
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: nginx-config
      containers:
        - name: payment-service
          env:
          - name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                key: NEW_RELIC_LICENSE_KEY
                name: payment-service-secrets
          - name: NEW_RELIC_APP_NAME
            value: payment
        image: public.ecr.aws/g7c8o4c7/payment:latest
        imagePullPolicy: Always
          volumeMounts:
            - name: app-shared
              mountPath: /app
            - name: logs
              mountPath: /app/fuel/app/logs
            - name: cache
              mountPath: /app/fuel/app/cache
          env:
            - name: FUEL_ENV
              value: "production"
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: app-shared
              mountPath: /app/public
              subPath: public
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app: payment-api
data:
  nginx.conf: |
    worker_processes 1;
    events { worker_connections 1024; }
    http {
        include       mime.types;
        default_type  application/octet-stream;
        sendfile        on;
        keepalive_timeout  65;
        server {
            listen 80;
            server_name localhost;
            root /app/public;
            index index.php index.html;
            location / {
                try_files $uri $uri/ /index.php?$query_string;
            }
            location ~ \.php$ {
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME /app/public$fastcgi_script_name;
                include fastcgi_params;
            }
            location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires 1y;
                log_not_found off;
            }
        }
    }