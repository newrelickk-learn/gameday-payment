---
apiVersion: v1
kind: Service
metadata:
  name: payment
  namespace: catalogue
spec:
  selector:
    name: payment-service
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: payment-service-secrets
  namespace: catalogue
type: Opaque
stringData:
  NEW_RELIC_LICENSE_KEY: "YOUR_NEW_RELIC_LICENSE_KEY"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: payment-service
  name: payment-service
  namespace: catalogue
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: payment-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: payment-service
    spec:
      containers:
      - env:
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: NEW_RELIC_LICENSE_KEY
              name: payment-service-secrets
        - name: NEW_RELIC_APP_NAME
          value: payment
        image: public.ecr.aws/g7c8o4c7/payment-service:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 10
        name: payment-service
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 1
            memory: 1Gi
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        beta.kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30 